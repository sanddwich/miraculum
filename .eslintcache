[{"C:\\GitHub\\repositories\\miraculum\\src\\SharedComponents\\ToastComponent\\ToastComponent.tsx":"1","C:\\GitHub\\repositories\\miraculum\\src\\Redux\\constants\\ActionTypes.tsx":"2","C:\\GitHub\\repositories\\miraculum\\src\\SharedComponents\\LoaderHorizontal\\LoaderHorizontal.tsx":"3","C:\\GitHub\\repositories\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block9\\Block9.tsx":"4","C:\\GitHub\\repositories\\miraculum\\src\\Config\\Config.ts":"5","C:\\GitHub\\repositories\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block6\\Block6.tsx":"6","C:\\GitHub\\repositories\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block11\\Block11.tsx":"7","C:\\GitHub\\repositories\\miraculum\\src\\index.tsx":"8","C:\\GitHub\\repositories\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Second\\Second.tsx":"9","C:\\GitHub\\repositories\\miraculum\\src\\Redux\\reducers\\index.tsx":"10","C:\\GitHub\\repositories\\miraculum\\src\\SharedComponents\\CaseItemCard\\CaseItemCard.tsx":"11","C:\\GitHub\\repositories\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx":"12","C:\\GitHub\\repositories\\miraculum\\src\\SharedComponents\\ModalWindow\\ModalWindow.tsx":"13","C:\\GitHub\\repositories\\miraculum\\src\\Layouts\\MainLayout\\MainFooter\\MainFooter.tsx":"14","C:\\GitHub\\repositories\\miraculum\\src\\SharedComponents\\TaskDropDownCard\\TaskDropDownCard.tsx":"15","C:\\GitHub\\repositories\\miraculum\\src\\App.tsx":"16","C:\\GitHub\\repositories\\miraculum\\src\\SharedComponents\\IconButton\\IconButton.tsx":"17","C:\\GitHub\\repositories\\miraculum\\src\\SharedComponents\\CaseDropDownCard\\CaseDropDownCard.tsx":"18","C:\\GitHub\\repositories\\miraculum\\src\\SharedComponents\\CircleDot\\CircleDot.tsx":"19"},{"size":1787,"mtime":1625494317556,"results":"20","hashOfConfig":"21"},{"size":954,"mtime":1626274586579,"results":"22","hashOfConfig":"21"},{"size":520,"mtime":1625494317556,"results":"23","hashOfConfig":"21"},{"size":4329,"mtime":1627810851439,"results":"24","hashOfConfig":"21"},{"size":19137,"mtime":1628259123801,"results":"25","hashOfConfig":"21"},{"size":5772,"mtime":1627812114837,"results":"26","hashOfConfig":"21"},{"size":2170,"mtime":1627812958676,"results":"27","hashOfConfig":"21"},{"size":673,"mtime":1625494317556,"results":"28","hashOfConfig":"21"},{"size":379,"mtime":1625494317540,"results":"29","hashOfConfig":"21"},{"size":190,"mtime":1625494317540,"results":"30","hashOfConfig":"21"},{"size":973,"mtime":1626185708738,"results":"31","hashOfConfig":"21"},{"size":1110,"mtime":1626185708737,"results":"32","hashOfConfig":"21"},{"size":1593,"mtime":1626191231182,"results":"33","hashOfConfig":"21"},{"size":3157,"mtime":1628257987138,"results":"34","hashOfConfig":"21"},{"size":2261,"mtime":1626185708739,"results":"35","hashOfConfig":"21"},{"size":1403,"mtime":1625494317535,"results":"36","hashOfConfig":"21"},{"size":1564,"mtime":1626274586587,"results":"37","hashOfConfig":"21"},{"size":2456,"mtime":1626103783287,"results":"38","hashOfConfig":"21"},{"size":1449,"mtime":1626103783289,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1oq6u4p",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\GitHub\\repositories\\miraculum\\src\\SharedComponents\\ToastComponent\\ToastComponent.tsx",[],"C:\\GitHub\\repositories\\miraculum\\src\\Redux\\constants\\ActionTypes.tsx",[],"C:\\GitHub\\repositories\\miraculum\\src\\SharedComponents\\LoaderHorizontal\\LoaderHorizontal.tsx",[],["85","86"],"C:\\GitHub\\repositories\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block9\\Block9.tsx",[],"C:\\GitHub\\repositories\\miraculum\\src\\Config\\Config.ts",[],"C:\\GitHub\\repositories\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block6\\Block6.tsx",["87","88","89","90","91"],"import React, { useState } from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\n// import { connect } from 'react-redux'\r\nimport { Config } from '../../../../../Config/Config'\r\n// import { RootState } from '../../../../../Redux'\r\n// import { setModalWindow } from '../../../../../Redux/actions/modal'\r\n// import { ModalState } from '../../../../../Redux/interfaces/interfaces'\r\nimport ModalWindow from '../../../../../SharedComponents/ModalWindow/ModalWindow'\r\nimport './Block6.scss'\r\nimport { Element } from 'react-scroll'\r\n\r\n// Import Swiper React components\r\nimport SwiperCore, { Autoplay, Navigation } from 'swiper'\r\nimport { Swiper, SwiperSlide } from 'swiper/react'\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss'\r\nimport 'swiper/components/navigation/navigation.scss'\r\nimport 'swiper/components/pagination/pagination.scss'\r\n\r\n// interface Block6Props {\r\n//   setModalWindow: (isActive: boolean) => void\r\n//   modal: ModalState\r\n// }\r\n\r\ninterface Block6Props {}\r\n\r\nconst Block6 = (props: Block6Props) => {\r\n  const [letters, setLetters] = useState<number>(5)\r\n  const [modalSlider, setModalSlider] = useState<boolean>(false)\r\n  const [activeSlide, setActiveSlide] = useState<string>(Config.letters[0])\r\n  const [modalActive, setModalActive] = useState<boolean>(false)\r\n\r\n  const closeHandler = (): void => {\r\n    setModalActive(false)\r\n  }\r\n\r\n  const modalOpen = (slider: boolean = false, activeSlide: string = Config.letters[0]): void => {\r\n    setActiveSlide(activeSlide)\r\n    setModalSlider(slider)\r\n    setModalActive(true)\r\n  }\r\n\r\n  return (\r\n    <Element name=\"Block6\">\r\n      <Container className=\"Block6 p-0\">\r\n        {modalActive && (\r\n          <ModalWindow closeHandler={() => closeHandler()}>\r\n            {modalSlider ? (\r\n              <Swiper\r\n                loop={false}\r\n                navigation={{\r\n                  nextEl: '#Block2__NextArrow',\r\n                  prevEl: '#Block2__PrewArrow',\r\n                }}\r\n                spaceBetween={10}\r\n                breakpoints={{\r\n                  992: {\r\n                    slidesPerView: 2,\r\n                  },\r\n                  768: {\r\n                    slidesPerView: 1,\r\n                  },\r\n                }}\r\n                autoplay={{\r\n                  delay: 5000,\r\n                }}\r\n              >\r\n                {Config.letters.map((img, index) => {\r\n                  return (\r\n                    <SwiperSlide key={index}>\r\n                      <Container fluid className=\"p-0 d-flex justify-content-center align-items-center\">\r\n                        <img className=\"img-fluid\" src={img} alt=\"\" />\r\n                      </Container>\r\n                    </SwiperSlide>\r\n                  )\r\n                })}\r\n              </Swiper>\r\n            ) : (\r\n              <Container fluid className=\"p-0 d-flex justify-content-center align-items-center\">\r\n                <img className=\"img-fluid\" src={activeSlide} alt=\"\" />\r\n              </Container>\r\n            )}\r\n          </ModalWindow>\r\n        )}\r\n\r\n        <Row className=\"Block6__Row1 m-0\">\r\n          <Col lg={6} xs={12} className=\"Block6__left p-0\">\r\n            <h1>О компании</h1>\r\n            <p>\r\n              <b>MIRACULUM research group</b> – независимое исследовательское агентство, специализирующееся на\r\n              маркетинговых исследованиях для принятия эффективных управленческих решений.\r\n            </p>\r\n            <p>\r\n              <b>MIRACULUM research group</b> реализует полный комплекс исследований, направленных на получение\r\n              разносторонней аналитической информации в сфере изучения продукта, потребителей, клиентов, бренда,\r\n              коммуникаций и развития бизнеса.\r\n            </p>\r\n          </Col>\r\n          <Col lg={6} xs={12} className=\"Block6__right p-0\">\r\n            <h1>Рекомендательные письма</h1>\r\n            <Container fluid className=\"Block6__letters p-0\">\r\n              <Row className=\"Block6__lettersRow m-0\">\r\n                {Config.letters.map((letter, index) => {\r\n                  if (index < letters) {\r\n                    return (\r\n                      <Col xs={4} key={index} className=\"Block6__letterBlur\" onClick={() => modalOpen(false, letter)}>\r\n                        <Container\r\n                          fluid\r\n                          className=\"Block6__letterBG p-0\"\r\n                          style={{ backgroundImage: `url(\"${letter}\")` }}\r\n                        >\r\n                          <div className=\"Block6__letter\"></div>\r\n                        </Container>\r\n                        <div className=\"Block6__letterImg\">\r\n                          <img src=\"/icons/zoom.svg\" alt=\"\" />\r\n                        </div>\r\n                      </Col>\r\n                    )\r\n                  }\r\n                })}\r\n                <Col xs={4} className=\"Block6__letterBlur\" onClick={() => modalOpen(true)}>\r\n                  <div className=\"Block6__letter lastElement\">Смотреть все</div>\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Element>\r\n  )\r\n}\r\n\r\n// const mapDispatchToProps = {\r\n//   setModalWindow,\r\n// }\r\n\r\n// function mapStateToProps(state: RootState) {\r\n//   const modal = state.modal\r\n//   return {\r\n//     modal,\r\n//   }\r\n// }\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(Block6)\r\n\r\nexport default Block6\r\n",["92","93"],"C:\\GitHub\\repositories\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block11\\Block11.tsx",[],"C:\\GitHub\\repositories\\miraculum\\src\\index.tsx",[],["94","95"],"C:\\GitHub\\repositories\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Second\\Second.tsx",[],"C:\\GitHub\\repositories\\miraculum\\src\\Redux\\reducers\\index.tsx",[],"C:\\GitHub\\repositories\\miraculum\\src\\SharedComponents\\CaseItemCard\\CaseItemCard.tsx",[],"C:\\GitHub\\repositories\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx",[],"C:\\GitHub\\repositories\\miraculum\\src\\SharedComponents\\ModalWindow\\ModalWindow.tsx",[],"C:\\GitHub\\repositories\\miraculum\\src\\Layouts\\MainLayout\\MainFooter\\MainFooter.tsx",[],["96","97"],"C:\\GitHub\\repositories\\miraculum\\src\\SharedComponents\\TaskDropDownCard\\TaskDropDownCard.tsx",["98","99"],"C:\\GitHub\\repositories\\miraculum\\src\\App.tsx",[],"C:\\GitHub\\repositories\\miraculum\\src\\SharedComponents\\IconButton\\IconButton.tsx",["100","101","102"],"import React from 'react'\r\nimport { useState } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport { propTypes } from 'react-bootstrap/esm/Image'\r\nimport './IconButton.scss'\r\n\r\ninterface IconButtonProps {\r\n  height: number\r\n  width?: number\r\n  icon?: string\r\n  title: string\r\n  borderRadius?: string\r\n  boxShadow?: string\r\n  bgColor: string\r\n  bgIconColor?: string\r\n  onClickHandler?: () => void\r\n}\r\n\r\nexport default function IconButton(props: IconButtonProps) {\r\n  return (\r\n    <div\r\n      className={`IconButton p-0 d-flex justify-content-start hvr-sweep-to-right`}\r\n      style={{\r\n        width: props.width ? props.width : '100%',\r\n        boxShadow: props.boxShadow ? props.boxShadow : 'none',\r\n        borderRadius: props.borderRadius ? props.borderRadius : '0px',\r\n        backgroundColor: props.bgColor,\r\n        height: props.height,\r\n      }}\r\n      onClick={() => props.onClickHandler && props.onClickHandler()}\r\n    >\r\n      {props.icon && (\r\n        <div\r\n          className=\"IconButton__icon d-flex justify-content-center align-items-center\"\r\n          style={{\r\n            width: props.height*1.2,\r\n            height: props.height,\r\n            backgroundColor: props.bgIconColor ? props.bgIconColor : props.bgColor,\r\n          }}\r\n        >\r\n          <img className=\"img-fluid\" src={`${props.icon}`} alt={`${props.title}`} />\r\n        </div>\r\n      )}\r\n      <div className=\"IconButton__title d-flex justify-content-center align-items-center\" style={{ width: '100%' }}>\r\n        {props.title}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n",["103","104"],"C:\\GitHub\\repositories\\miraculum\\src\\SharedComponents\\CaseDropDownCard\\CaseDropDownCard.tsx",[],"C:\\GitHub\\repositories\\miraculum\\src\\SharedComponents\\CircleDot\\CircleDot.tsx",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":13,"column":8,"nodeType":"111","messageId":"112","endLine":13,"endColumn":18},{"ruleId":"109","severity":1,"message":"113","line":13,"column":22,"nodeType":"111","messageId":"112","endLine":13,"endColumn":30},{"ruleId":"109","severity":1,"message":"114","line":13,"column":32,"nodeType":"111","messageId":"112","endLine":13,"endColumn":42},{"ruleId":"109","severity":1,"message":"115","line":29,"column":19,"nodeType":"111","messageId":"112","endLine":29,"endColumn":29},{"ruleId":"116","severity":1,"message":"117","line":104,"column":53,"nodeType":"118","messageId":"119","endLine":104,"endColumn":55},{"ruleId":"105","replacedBy":"120"},{"ruleId":"107","replacedBy":"121"},{"ruleId":"105","replacedBy":"122"},{"ruleId":"107","replacedBy":"123"},{"ruleId":"105","replacedBy":"124"},{"ruleId":"107","replacedBy":"125"},{"ruleId":"109","severity":1,"message":"126","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":21},{"ruleId":"127","severity":1,"message":"128","line":24,"column":21,"nodeType":"129","endLine":24,"endColumn":56},{"ruleId":"109","severity":1,"message":"130","line":2,"column":10,"nodeType":"111","messageId":"112","endLine":2,"endColumn":18},{"ruleId":"109","severity":1,"message":"131","line":3,"column":10,"nodeType":"111","messageId":"112","endLine":3,"endColumn":19},{"ruleId":"109","severity":1,"message":"132","line":4,"column":10,"nodeType":"111","messageId":"112","endLine":4,"endColumn":19},{"ruleId":"105","replacedBy":"133"},{"ruleId":"107","replacedBy":"134"},"no-native-reassign",["135"],"no-negated-in-lhs",["136"],"@typescript-eslint/no-unused-vars","'SwiperCore' is defined but never used.","Identifier","unusedVar","'Autoplay' is defined but never used.","'Navigation' is defined but never used.","'setLetters' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd",["135"],["136"],["135"],["136"],["135"],["136"],"'TaskInterface' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'Container' is defined but never used.","'propTypes' is defined but never used.",["135"],["136"],"no-global-assign","no-unsafe-negation"]