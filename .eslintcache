[{"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block6\\Block6.tsx":"1","C:\\GitHub\\miraculum\\src\\SharedComponents\\ModalWindow\\ModalWindow.tsx":"2","C:\\GitHub\\miraculum\\src\\Redux\\reducers\\modal.tsx":"3","C:\\GitHub\\miraculum\\src\\Config\\Config.ts":"4","C:\\GitHub\\miraculum\\src\\App.tsx":"5","C:\\GitHub\\miraculum\\src\\SharedComponents\\ToastComponent\\ToastComponent.tsx":"6","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\MainHeader\\MainHeader.tsx":"7","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx":"8","C:\\GitHub\\miraculum\\src\\Redux\\reducers\\index.tsx":"9","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block3\\Block3.tsx":"10","C:\\GitHub\\miraculum\\src\\Redux\\reducers\\toast.tsx":"11","C:\\GitHub\\miraculum\\src\\SharedComponents\\SolutionCard\\SolutionCard.tsx":"12","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block7\\Block7.tsx":"13","C:\\GitHub\\miraculum\\src\\SharedComponents\\HorLine\\HorLine.tsx":"14","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block8\\Block8.tsx":"15","C:\\GitHub\\miraculum\\src\\SharedComponents\\CommandCard\\CommandCard.tsx":"16"},{"size":5282,"mtime":1625727947043,"results":"17","hashOfConfig":"18"},{"size":1563,"mtime":1625726076692,"results":"19","hashOfConfig":"18"},{"size":1176,"mtime":1625725333361,"results":"20","hashOfConfig":"18"},{"size":935,"mtime":1625742571241,"results":"21","hashOfConfig":"18"},{"size":1403,"mtime":1625203498124,"results":"22","hashOfConfig":"18"},{"size":1787,"mtime":1619071910887,"results":"23","hashOfConfig":"18"},{"size":3166,"mtime":1625224563321,"results":"24","hashOfConfig":"18"},{"size":802,"mtime":1625744184924,"results":"25","hashOfConfig":"18"},{"size":190,"mtime":1617964863452,"results":"26","hashOfConfig":"18"},{"size":2971,"mtime":1625652767755,"results":"27","hashOfConfig":"18"},{"size":891,"mtime":1617964863453,"results":"28","hashOfConfig":"18"},{"size":1217,"mtime":1625661778962,"results":"29","hashOfConfig":"18"},{"size":832,"mtime":1625743451844,"results":"30","hashOfConfig":"18"},{"size":312,"mtime":1625744342098,"results":"31","hashOfConfig":"18"},{"size":2489,"mtime":1625746813306,"results":"32","hashOfConfig":"18"},{"size":747,"mtime":1625745454578,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},"dx5cs1",{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block6\\Block6.tsx",["68","69","70","71","72"],"import React, { useState } from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { Config } from '../../../../../Config/Config'\r\nimport { RootState } from '../../../../../Redux'\r\nimport { setModalWindow } from '../../../../../Redux/actions/modal'\r\nimport { ModalState } from '../../../../../Redux/interfaces/interfaces'\r\nimport ModalWindow from '../../../../../SharedComponents/ModalWindow/ModalWindow'\r\nimport './Block6.scss'\r\n\r\n// Import Swiper React components\r\nimport SwiperCore, { Autoplay, Navigation } from 'swiper'\r\nimport { Swiper, SwiperSlide } from 'swiper/react'\r\n\r\n// Import Swiper styles\r\nimport 'swiper/swiper.scss'\r\nimport 'swiper/components/navigation/navigation.scss'\r\nimport 'swiper/components/pagination/pagination.scss'\r\n\r\ninterface Block6Props {\r\n  setModalWindow: (isActive: boolean) => void\r\n  modal: ModalState\r\n}\r\n\r\nconst Block6 = (props: Block6Props) => {\r\n  const [letters, setLetters] = useState<number>(5)\r\n  const [modalSlider, setModalSlider] = useState<boolean>(false)\r\n  const [activeSlide, setActiveSlide] = useState<string>(Config.letters[0])\r\n\r\n  const closeHandler = (): void => {\r\n    props.setModalWindow(false)\r\n  }\r\n\r\n  const modalOpen = (slider: boolean = false, activeSlide: string = Config.letters[0]): void => {\r\n    setActiveSlide(activeSlide)\r\n    setModalSlider(slider)\r\n    props.setModalWindow(true)\r\n  }\r\n\r\n  return (\r\n    <Container className=\"Block6 p-0\">\r\n      {props.modal.modalWindow.isActive && (\r\n        <ModalWindow closeHandler={() => closeHandler()}>\r\n          {modalSlider ? (\r\n            <Swiper\r\n              loop={false}\r\n              navigation={{\r\n                nextEl: '#Block2__NextArrow',\r\n                prevEl: '#Block2__PrewArrow',\r\n              }}\r\n              spaceBetween={10}\r\n              breakpoints={{\r\n                992: {\r\n                  slidesPerView: 2,\r\n                },\r\n                768: {\r\n                  slidesPerView: 1,\r\n                },\r\n              }}\r\n              autoplay={{\r\n                delay: 5000,\r\n              }}\r\n            >\r\n              {Config.letters.map((img, index) => {\r\n                return (\r\n                  <SwiperSlide key={index}>\r\n                    <Container fluid className=\"p-0 d-flex justify-content-center align-items-center\">\r\n                      <img className=\"img-fluid\" src={img} alt=\"\" />\r\n                    </Container>\r\n                  </SwiperSlide>\r\n                )\r\n              })}\r\n            </Swiper>\r\n          ) : (\r\n            <Container fluid className=\"p-0 d-flex justify-content-center align-items-center\">\r\n              <img className=\"img-fluid\" src={activeSlide} alt=\"\" />\r\n            </Container>\r\n          )}\r\n        </ModalWindow>\r\n      )}\r\n\r\n      <Row className=\"Block6__Row1 m-0\">\r\n        <Col lg={6} xs={12} className=\"Block6__left p-0\">\r\n          <h1>О компании</h1>\r\n          <p>\r\n            <b>MIRACULUM research group</b> – независимое исследовательское агентство, специализирующееся на\r\n            маркетинговых исследованиях для принятия эффективных управленческих решений.\r\n          </p>\r\n          <p>\r\n            <b>MIRACULUM research group</b> реализует полный комплекс исследований, направленных на получение\r\n            разносторонней аналитической информации в сфере изучения продукта, потребителей, клиентов, бренда,\r\n            коммуникаций и развития бизнеса.\r\n          </p>\r\n        </Col>\r\n        <Col lg={6} xs={12} className=\"Block6__right p-0\">\r\n          <h1>Рекомендательные письма</h1>\r\n          <Container fluid className=\"Block6__letters p-0\">\r\n            <Row className=\"Block6__lettersRow m-0\">\r\n              {Config.letters.map((letter, index) => {\r\n                if (index < letters) {\r\n                  return (\r\n                    <Col xs={4} key={index} className=\"Block6__letterBlur\" onClick={() => modalOpen(false, letter)}>\r\n                      <Container fluid className=\"Block6__letterBG p-0\" style={{ backgroundImage: `url(\"${letter}\")` }}>\r\n                        <div className=\"Block6__letter\"></div>\r\n                      </Container>\r\n                      <div className=\"Block6__letterImg\">\r\n                        <img src=\"/icons/zoom.svg\" alt=\"\" />\r\n                      </div>\r\n                    </Col>\r\n                  )\r\n                }\r\n              })}\r\n              <Col xs={4} className=\"Block6__letterBlur\" onClick={() => modalOpen(true)}>\r\n                <div className=\"Block6__letter lastElement\">Смотреть все</div>\r\n              </Col>\r\n            </Row>\r\n          </Container>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setModalWindow,\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  const modal = state.modal\r\n  return {\r\n    modal,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Block6)\r\n",["73","74"],"C:\\GitHub\\miraculum\\src\\SharedComponents\\ModalWindow\\ModalWindow.tsx",[],"C:\\GitHub\\miraculum\\src\\Redux\\reducers\\modal.tsx",[],"C:\\GitHub\\miraculum\\src\\Config\\Config.ts",[],"C:\\GitHub\\miraculum\\src\\App.tsx",[],"C:\\GitHub\\miraculum\\src\\SharedComponents\\ToastComponent\\ToastComponent.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\MainHeader\\MainHeader.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx",[],"C:\\GitHub\\miraculum\\src\\Redux\\reducers\\index.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block3\\Block3.tsx",[],"C:\\GitHub\\miraculum\\src\\Redux\\reducers\\toast.tsx",[],"C:\\GitHub\\miraculum\\src\\SharedComponents\\SolutionCard\\SolutionCard.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block7\\Block7.tsx",[],"C:\\GitHub\\miraculum\\src\\SharedComponents\\HorLine\\HorLine.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block8\\Block8.tsx",[],"C:\\GitHub\\miraculum\\src\\SharedComponents\\CommandCard\\CommandCard.tsx",[],{"ruleId":"75","severity":1,"message":"76","line":12,"column":8,"nodeType":"77","messageId":"78","endLine":12,"endColumn":18},{"ruleId":"75","severity":1,"message":"79","line":12,"column":22,"nodeType":"77","messageId":"78","endLine":12,"endColumn":30},{"ruleId":"75","severity":1,"message":"80","line":12,"column":32,"nodeType":"77","messageId":"78","endLine":12,"endColumn":42},{"ruleId":"75","severity":1,"message":"81","line":26,"column":19,"nodeType":"77","messageId":"78","endLine":26,"endColumn":29},{"ruleId":"82","severity":1,"message":"83","line":99,"column":51,"nodeType":"84","messageId":"85","endLine":99,"endColumn":53},{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},"@typescript-eslint/no-unused-vars","'SwiperCore' is defined but never used.","Identifier","unusedVar","'Autoplay' is defined but never used.","'Navigation' is defined but never used.","'setLetters' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-global-assign","no-unsafe-negation"]