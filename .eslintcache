[{"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\MainHeader\\MainHeader.tsx":"1","C:\\GitHub\\miraculum\\src\\SharedComponents\\MobileMenu\\MobileMenu.tsx":"2","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\MainLayout.tsx":"3","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block3\\Block3.tsx":"4","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\MainFooter\\MainFooter.tsx":"5","C:\\GitHub\\miraculum\\src\\index.tsx":"6","C:\\GitHub\\miraculum\\src\\Redux\\index.tsx":"7","C:\\GitHub\\miraculum\\src\\SharedComponents\\ToastComponent\\ToastComponent.tsx":"8","C:\\GitHub\\miraculum\\src\\Redux\\actions\\toast.tsx":"9","C:\\GitHub\\miraculum\\src\\Redux\\actions\\modal.tsx":"10","C:\\GitHub\\miraculum\\src\\SharedComponents\\IconButton\\IconButton.tsx":"11","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx":"12","C:\\GitHub\\miraculum\\src\\Redux\\reducers\\index.tsx":"13","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block9\\Block9.tsx":"14","C:\\GitHub\\miraculum\\src\\Redux\\reducers\\app.tsx":"15","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block5\\Block5.tsx":"16","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block7\\Block7.tsx":"17","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block11\\Block11.tsx":"18","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block1\\Block1.tsx":"19","C:\\GitHub\\miraculum\\src\\SharedComponents\\HorLine\\HorLine.tsx":"20","C:\\GitHub\\miraculum\\src\\SharedComponents\\CircleDot\\CircleDot.tsx":"21","C:\\GitHub\\miraculum\\src\\SharedComponents\\TaskDropDownCard\\TaskDropDownCard.tsx":"22"},{"size":4048,"mtime":1626346812726,"results":"23","hashOfConfig":"24"},{"size":4715,"mtime":1626346108614,"results":"25","hashOfConfig":"24"},{"size":7625,"mtime":1626346082697,"results":"26","hashOfConfig":"24"},{"size":4273,"mtime":1626347084902,"results":"27","hashOfConfig":"24"},{"size":3097,"mtime":1626347535147,"results":"28","hashOfConfig":"24"},{"size":673,"mtime":1617964863456,"results":"29","hashOfConfig":"24"},{"size":419,"mtime":1626260359358,"results":"30","hashOfConfig":"24"},{"size":1787,"mtime":1619071910887,"results":"31","hashOfConfig":"24"},{"size":351,"mtime":1617964863446,"results":"32","hashOfConfig":"24"},{"size":724,"mtime":1626237679015,"results":"33","hashOfConfig":"24"},{"size":1564,"mtime":1626239122181,"results":"34","hashOfConfig":"24"},{"size":1110,"mtime":1626178799502,"results":"35","hashOfConfig":"24"},{"size":190,"mtime":1617964863452,"results":"36","hashOfConfig":"24"},{"size":4492,"mtime":1626345235128,"results":"37","hashOfConfig":"24"},{"size":1488,"mtime":1620279439613,"results":"38","hashOfConfig":"24"},{"size":3762,"mtime":1626345235123,"results":"39","hashOfConfig":"24"},{"size":1157,"mtime":1626345235125,"results":"40","hashOfConfig":"24"},{"size":1969,"mtime":1626345235110,"results":"41","hashOfConfig":"24"},{"size":4400,"mtime":1626345235107,"results":"42","hashOfConfig":"24"},{"size":312,"mtime":1625744342098,"results":"43","hashOfConfig":"24"},{"size":1449,"mtime":1625813680100,"results":"44","hashOfConfig":"24"},{"size":2261,"mtime":1626156367500,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dx5cs1",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"50"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\MainHeader\\MainHeader.tsx",[],"C:\\GitHub\\miraculum\\src\\SharedComponents\\MobileMenu\\MobileMenu.tsx",[],["92","93"],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\MainLayout.tsx",["94"],"import React, { useState } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { RootState } from '../../Redux'\r\nimport MainBody from './MainBody/MainBody'\r\nimport MainFooter from './MainFooter/MainFooter'\r\nimport MainHeader from './MainHeader/MainHeader'\r\nimport './MainLayout.scss'\r\nimport Main from './Pages/Main/Main'\r\nimport Second from './Pages/Second/Second'\r\nimport { setModalForm, setModalThanks } from '../../Redux/actions/modal'\r\nimport { ModalState } from '../../Redux/interfaces/interfaces'\r\nimport ModalWindow from '../../SharedComponents/ModalWindow/ModalWindow'\r\nimport IconButton from '../../SharedComponents/IconButton/IconButton'\r\nimport { Config } from '../../Config/Config'\r\nimport ReactInputMask from 'react-input-mask'\r\nimport axios from 'axios'\r\nimport LoaderHorizontal from '../../SharedComponents/LoaderHorizontal/LoaderHorizontal'\r\n\r\ninterface MainLayoutProps {\r\n  modal: ModalState\r\n  setModalForm: (isActive: boolean) => void\r\n  setModalThanks: (isActive: boolean) => void\r\n}\r\n\r\nconst MainLayout = (props: MainLayoutProps) => {\r\n  const [nameField, setNameField] = useState<string>('')\r\n  const [nameError, setNameError] = useState<boolean>(false)\r\n  const [phoneField, setPhoneField] = useState<string>('')\r\n  const [phoneError, setPhoneError] = useState<boolean>(false)\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n\r\n  const nameChangeHandler = (value: string) => {\r\n    setNameField(value)\r\n    setNameError(false)\r\n  }\r\n\r\n  const phoneChangeHandler = (value: string) => {\r\n    setPhoneField(value)\r\n    setPhoneError(false)\r\n  }\r\n\r\n  const phoneValidate = (value: string): boolean => {\r\n    const str = value.match(/\\d/g)?.join('')\r\n    return str && str.length === Config.phoneMinLength ? true : false\r\n  }\r\n\r\n  const nameValidate = (value: string): boolean => {\r\n    const str = value\r\n      .trim()\r\n      .match(/^[а-яА-ЯёЁ]+$/g)\r\n      ?.join('')\r\n    return str && str.length > Config.nameMinLength ? true : false\r\n  }\r\n\r\n  const clickHandler = (): void => {\r\n    !phoneValidate(phoneField) && setPhoneError(true)\r\n    !nameValidate(nameField) && setNameError(true)\r\n    phoneValidate(phoneField) && nameValidate(nameField) && sendMail()\r\n  }\r\n\r\n  const sendMail = async (): Promise<any> => {\r\n    setLoading(true)\r\n    const mailSettings = { ...Config.mailSettings, userName: nameField, userPhone: phoneField, siteUrl: Config.url }\r\n    axios\r\n      .post(mailSettings.apiPath, mailSettings)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log(res.data)\r\n          props.setModalForm(false)\r\n          props.setModalThanks(true)\r\n        } else {\r\n          console.log('Ошибка отправки сообщения')\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n      .finally(() => setLoading(false))\r\n\r\n    // props.setModalForm(false)\r\n    // props.setModalThanks(true)\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"MainLayout p-0\">\r\n      {props.modal.modalForm.isActive && (\r\n        <Container fluid className=\"KisModalForm p-0\">\r\n          <ModalWindow closeHandler={() => props.setModalForm(false)}>\r\n            <Container fluid className=\"KisModalForm__content p-0\">\r\n              <h1>Оставьте заявку</h1>\r\n              <h6>Мы свяжемся с вами и ответим на все ваши вопросы</h6>\r\n              <div className=\"KisModalForm__formFieldCont\">\r\n                <input\r\n                  className=\"KisModalForm__input\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Ваше имя\"\r\n                  value={nameField}\r\n                  onChange={(event) => nameChangeHandler(event?.target.value)}\r\n                />\r\n                <div className=\"KisModalForm__imgCont\">\r\n                  <img src=\"/icons/men.svg\" alt=\"\" />\r\n                </div>\r\n                {nameError && <small className=\"KisModalForm__inputError\">Не корректное заполнение поля</small>}\r\n              </div>\r\n              <div className=\"KisModalForm__formFieldCont\">\r\n                <ReactInputMask\r\n                  mask=\"9 (999) 999-99-99\"\r\n                  className={`KisModalForm__input `}\r\n                  type=\"tel\"\r\n                  name=\"phone\"\r\n                  placeholder=\"8 (900) 888-88-88\"\r\n                  value={phoneField}\r\n                  onChange={(event) => phoneChangeHandler(event?.target.value)}\r\n                />\r\n                <div className=\"KisModalForm__imgCont\">\r\n                  <img src=\"/icons/phone.svg\" alt=\"\" />\r\n                </div>\r\n                {phoneError && <small className=\"KisModalForm__inputError\">Не корректное заполнение поля</small>}\r\n              </div>\r\n\r\n              {loading ? (\r\n                <LoaderHorizontal />\r\n              ) : (\r\n                <div className=\"KisModalForm__formFieldCont\">\r\n                  <IconButton\r\n                    bgColor=\"#6473FB\"\r\n                    borderRadius=\"3px\"\r\n                    title=\"Отправить заявку\"\r\n                    height={70}\r\n                    width={280}\r\n                    onClickHandler={() => clickHandler()}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              <p>\r\n                Нажимая кнопку “Отправить” даю свое согласие на обработку{' '}\r\n                <a href={`${Config.url}/politic.pdf`} target=\"_blank\">\r\n                  персональных данных\r\n                </a>\r\n              </p>\r\n            </Container>\r\n          </ModalWindow>\r\n        </Container>\r\n      )}\r\n\r\n      {props.modal.modalThanks.isActive && (\r\n        <Container fluid className=\"KisModalThanks p-0\">\r\n          <ModalWindow closeHandler={() => props.setModalThanks(false)}>\r\n            <Container fluid className=\"KisModalThanks__content p-0\">\r\n              <h1 className=\"text-center\" style={{ padding: 30, paddingTop: 0 }}>\r\n                Спасибо за заявку!\r\n              </h1>\r\n              <p className=\"text-center\" style={{ padding: 30, paddingTop: 0 }}>\r\n                В ближайшее время мы свяжемся с вами\r\n              </p>\r\n              <div className=\"KisModalThanks__button d-flex justify-content-center\">\r\n                <IconButton\r\n                  bgColor=\"#6473FB\"\r\n                  borderRadius=\"3px\"\r\n                  title=\"Вернуться на сайт\"\r\n                  height={70}\r\n                  width={280}\r\n                  onClickHandler={() => {\r\n                    props.setModalThanks(false)\r\n                    document.querySelector('body')?.classList.remove('modal-open')\r\n                  }}\r\n                />\r\n              </div>\r\n            </Container>\r\n          </ModalWindow>\r\n        </Container>\r\n      )}\r\n\r\n      <MainHeader />\r\n      <MainBody>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Main} />\r\n          <Route path=\"/second\" exact component={Second} />\r\n\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </MainBody>\r\n\r\n      <MainFooter />\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setModalForm,\r\n  setModalThanks,\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  const modal = state.modal\r\n  return {\r\n    modal,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout)\r\n","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block3\\Block3.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\MainFooter\\MainFooter.tsx",[],"C:\\GitHub\\miraculum\\src\\index.tsx",[],"C:\\GitHub\\miraculum\\src\\Redux\\index.tsx",["95"],"C:\\GitHub\\miraculum\\src\\SharedComponents\\ToastComponent\\ToastComponent.tsx",[],"C:\\GitHub\\miraculum\\src\\Redux\\actions\\toast.tsx",[],"C:\\GitHub\\miraculum\\src\\Redux\\actions\\modal.tsx",[],"C:\\GitHub\\miraculum\\src\\SharedComponents\\IconButton\\IconButton.tsx",["96","97","98"],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx",[],"C:\\GitHub\\miraculum\\src\\Redux\\reducers\\index.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block9\\Block9.tsx",["99"],"C:\\GitHub\\miraculum\\src\\Redux\\reducers\\app.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block5\\Block5.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block7\\Block7.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block11\\Block11.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block1\\Block1.tsx",["100"],"C:\\GitHub\\miraculum\\src\\SharedComponents\\HorLine\\HorLine.tsx",[],"C:\\GitHub\\miraculum\\src\\SharedComponents\\CircleDot\\CircleDot.tsx",[],"C:\\GitHub\\miraculum\\src\\SharedComponents\\TaskDropDownCard\\TaskDropDownCard.tsx",["101","102"],{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","severity":1,"message":"108","line":141,"column":55,"nodeType":"109","endLine":141,"endColumn":70},{"ruleId":"110","severity":1,"message":"111","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":29},{"ruleId":"110","severity":1,"message":"114","line":2,"column":10,"nodeType":"112","messageId":"113","endLine":2,"endColumn":18},{"ruleId":"110","severity":1,"message":"115","line":3,"column":10,"nodeType":"112","messageId":"113","endLine":3,"endColumn":19},{"ruleId":"110","severity":1,"message":"116","line":4,"column":10,"nodeType":"112","messageId":"113","endLine":4,"endColumn":19},{"ruleId":"117","severity":1,"message":"118","line":80,"column":63,"nodeType":"119","messageId":"120","endLine":80,"endColumn":65},{"ruleId":"121","severity":1,"message":"122","line":18,"column":7,"nodeType":"112","messageId":"123","endLine":18,"endColumn":13},{"ruleId":"110","severity":1,"message":"124","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":21},{"ruleId":"125","severity":1,"message":"126","line":24,"column":21,"nodeType":"127","endLine":24,"endColumn":56},"no-native-reassign",["128"],"no-negated-in-lhs",["129"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","@typescript-eslint/no-unused-vars","'composeWithDevTools' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Container' is defined but never used.","'propTypes' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","@typescript-eslint/no-redeclare","'Block1' is already defined.","redeclared","'TaskInterface' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]