[{"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block9\\Block9.tsx":"1","C:\\GitHub\\miraculum\\src\\SharedComponents\\AreaCard\\AreaCard.tsx":"2","C:\\GitHub\\miraculum\\src\\SharedComponents\\CircleDot\\CircleDot.tsx":"3","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\MainHeader\\MainHeader.tsx":"4","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\MainFooter\\MainFooter.tsx":"5","C:\\GitHub\\miraculum\\src\\Config\\Config.ts":"6","C:\\GitHub\\miraculum\\src\\reportWebVitals.ts":"7","C:\\GitHub\\miraculum\\src\\Redux\\actions\\modal.tsx":"8","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx":"9","C:\\GitHub\\miraculum\\src\\Redux\\constants\\ActionTypes.tsx":"10","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block7\\Block7.tsx":"11","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block4\\Block4.tsx":"12","C:\\GitHub\\miraculum\\src\\Redux\\reducers\\toast.tsx":"13","C:\\GitHub\\miraculum\\src\\SharedComponents\\HorLine\\HorLine.tsx":"14","C:\\GitHub\\miraculum\\src\\SharedComponents\\ModalWindow\\ModalWindow.tsx":"15"},{"size":4095,"mtime":1625813595288,"results":"16","hashOfConfig":"17"},{"size":1058,"mtime":1625812842971,"results":"18","hashOfConfig":"17"},{"size":1449,"mtime":1625813680100,"results":"19","hashOfConfig":"17"},{"size":2817,"mtime":1625814659082,"results":"20","hashOfConfig":"17"},{"size":2657,"mtime":1625819307653,"results":"21","hashOfConfig":"17"},{"size":1135,"mtime":1625816626095,"results":"22","hashOfConfig":"17"},{"size":440,"mtime":1617964863457,"results":"23","hashOfConfig":"17"},{"size":488,"mtime":1619411983937,"results":"24","hashOfConfig":"17"},{"size":862,"mtime":1625819117601,"results":"25","hashOfConfig":"17"},{"size":840,"mtime":1620278955872,"results":"26","hashOfConfig":"17"},{"size":832,"mtime":1625743451844,"results":"27","hashOfConfig":"17"},{"size":3240,"mtime":1625659303400,"results":"28","hashOfConfig":"17"},{"size":891,"mtime":1617964863453,"results":"29","hashOfConfig":"17"},{"size":312,"mtime":1625744342098,"results":"30","hashOfConfig":"17"},{"size":1563,"mtime":1625726076692,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"dx5cs1",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block9\\Block9.tsx",["64"],"import React, { useState } from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport AreaCard from '../../../../../SharedComponents/AreaCard/AreaCard'\r\nimport './Block9.scss'\r\n\r\ninterface Block9Props {}\r\n\r\ninterface AreaCardProps {\r\n  title: string\r\n  icon: string\r\n  isActive: boolean\r\n  bgColor: string\r\n  borderRadius?: string\r\n  width?: string\r\n  colWidth: number\r\n  img: string\r\n}\r\n\r\nexport default function Block9(props: Block9Props) {\r\n  const [areaCards, setAreaCards] = useState<Array<AreaCardProps>>([\r\n    {\r\n      icon: '/icons/91.svg',\r\n      title: 'Строительство / Девелопмент',\r\n      isActive: true,\r\n      bgColor: '#333333',\r\n      borderRadius: '4px',\r\n      colWidth: 7,\r\n      img: '/img/91.png',\r\n    },\r\n    {\r\n      icon: '/icons/92.svg',\r\n      title: 'HoReCa',\r\n      isActive: false,\r\n      bgColor: '#333333',\r\n      borderRadius: '4px',\r\n      colWidth: 5,\r\n      img: '/img/92.png',\r\n    },\r\n    {\r\n      icon: '/icons/93.svg',\r\n      title: 'Розничная торговля (FMCG, DIY (товары для дома и дачи), аптеки)',\r\n      isActive: false,\r\n      bgColor: '#3C3C3C',\r\n      borderRadius: '4px',\r\n      colWidth: 7,\r\n      img: '/img/93.png',\r\n    },\r\n    {\r\n      icon: '/icons/94.svg',\r\n      title: 'Частная медицина',\r\n      isActive: false,\r\n      bgColor: '#3C3C3C',\r\n      borderRadius: '4px',\r\n      colWidth: 5,\r\n      img: '/img/94.png',\r\n    },\r\n    {\r\n      icon: '/icons/95.svg',\r\n      title: 'Электоральные исследования',\r\n      isActive: false,\r\n      bgColor: '#333333',\r\n      borderRadius: '4px',\r\n      colWidth: 7,\r\n      img: '/img/95.png',\r\n    },\r\n    {\r\n      icon: '/icons/96.svg',\r\n      title: 'Связь / Телеком',\r\n      isActive: false,\r\n      bgColor: '#333333',\r\n      borderRadius: '4px',\r\n      colWidth: 5,\r\n      img: '/img/96.png',\r\n    },\r\n  ])\r\n\r\n  const getActiveCardImage = (): string | undefined => {\r\n    const imgs: (string | undefined)[] = areaCards.map((card) => {\r\n      if (card.isActive) {\r\n        return card.img\r\n      }\r\n    })\r\n\r\n    if (imgs[0]) {\r\n      return imgs[0]\r\n    } else {\r\n      return undefined\r\n    }\r\n  }\r\n\r\n  const setActiveAreaCadr = (id: number): void => {\r\n    const tmpAreaCards: AreaCardProps[] = areaCards.map((card) => {\r\n      card.isActive = false\r\n      return card\r\n    })\r\n    tmpAreaCards[id].isActive = true\r\n    setAreaCards(tmpAreaCards)\r\n  }\r\n\r\n  const onClickHandler = (id: number): void => {\r\n    setActiveAreaCadr(id)\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"Block9 p-0 d-none d-lg-block\">\r\n      <Container className=\"Block9__Cont\">\r\n        <Row className=\"Block9__Row1 m-0\">\r\n          <Col lg={5} className=\"Block9__title p-0\">\r\n            <h1>С какими нишами мы работаем</h1>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"Block9__Row2 m-0\">\r\n          <Col lg={8} className=\"Block9__left p-0\">\r\n            <Container fluid className=\"p-0\">\r\n              <Row className=\"m-0\">\r\n                {areaCards.map((card, index) => {\r\n                  return (\r\n                    <Col key={index} md={card.colWidth} className=\"Block9__cardCont\">\r\n                      <AreaCard\r\n                        title={card.title}\r\n                        bgColor={card.bgColor}\r\n                        icon={card.icon}\r\n                        isActive={card.isActive}\r\n                        borderRadius={card.borderRadius}\r\n                        onclickHandler={() => onClickHandler(index)}\r\n                      />\r\n                    </Col>\r\n                  )\r\n                })}\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n          <Col lg={4} className=\"Block9__right p-0 d-flex justify-content-center align-items-center\">\r\n            {getActiveCardImage() && (\r\n              <img className=\"img-fluid animated animate__fadeIn\" src={getActiveCardImage()} alt=\"\" />\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  )\r\n}\r\n",["65","66"],"C:\\GitHub\\miraculum\\src\\SharedComponents\\AreaCard\\AreaCard.tsx",[],"C:\\GitHub\\miraculum\\src\\SharedComponents\\CircleDot\\CircleDot.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\MainHeader\\MainHeader.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\MainFooter\\MainFooter.tsx",[],"C:\\GitHub\\miraculum\\src\\Config\\Config.ts",[],"C:\\GitHub\\miraculum\\src\\reportWebVitals.ts",[],"C:\\GitHub\\miraculum\\src\\Redux\\actions\\modal.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx",[],"C:\\GitHub\\miraculum\\src\\Redux\\constants\\ActionTypes.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block7\\Block7.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block4\\Block4.tsx",[],"C:\\GitHub\\miraculum\\src\\Redux\\reducers\\toast.tsx",[],"C:\\GitHub\\miraculum\\src\\SharedComponents\\HorLine\\HorLine.tsx",[],"C:\\GitHub\\miraculum\\src\\SharedComponents\\ModalWindow\\ModalWindow.tsx",[],{"ruleId":"67","severity":1,"message":"68","line":78,"column":63,"nodeType":"69","messageId":"70","endLine":78,"endColumn":65},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-global-assign","no-unsafe-negation"]