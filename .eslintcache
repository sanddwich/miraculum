[{"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\MainHeader\\MainHeader.tsx":"1","C:\\GitHub\\miraculum\\src\\SharedComponents\\MobileMenu\\MobileMenu.tsx":"2","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\MainLayout.tsx":"3","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block3\\Block3.tsx":"4","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\MainFooter\\MainFooter.tsx":"5","C:\\GitHub\\miraculum\\src\\index.tsx":"6","C:\\GitHub\\miraculum\\src\\Redux\\index.tsx":"7","C:\\GitHub\\miraculum\\src\\SharedComponents\\ToastComponent\\ToastComponent.tsx":"8","C:\\GitHub\\miraculum\\src\\Redux\\actions\\toast.tsx":"9","C:\\GitHub\\miraculum\\src\\Redux\\actions\\modal.tsx":"10","C:\\GitHub\\miraculum\\src\\SharedComponents\\IconButton\\IconButton.tsx":"11","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx":"12","C:\\GitHub\\miraculum\\src\\Redux\\reducers\\index.tsx":"13","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block9\\Block9.tsx":"14","C:\\GitHub\\miraculum\\src\\Redux\\reducers\\app.tsx":"15","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block5\\Block5.tsx":"16","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block7\\Block7.tsx":"17","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block11\\Block11.tsx":"18","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block1\\Block1.tsx":"19","C:\\GitHub\\miraculum\\src\\SharedComponents\\HorLine\\HorLine.tsx":"20","C:\\GitHub\\miraculum\\src\\SharedComponents\\CircleDot\\CircleDot.tsx":"21","C:\\GitHub\\miraculum\\src\\SharedComponents\\TaskDropDownCard\\TaskDropDownCard.tsx":"22","C:\\GitHub\\miraculum\\src\\reportWebVitals.ts":"23","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Second\\Second.tsx":"24","C:\\GitHub\\miraculum\\src\\Redux\\constants\\ActionTypes.tsx":"25","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block8\\Block8.tsx":"26","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block2\\Block2.tsx":"27","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block6\\Block6.tsx":"28","C:\\GitHub\\miraculum\\src\\SharedComponents\\AreaCard\\AreaCard.tsx":"29"},{"size":4048,"mtime":1626346812726,"results":"30","hashOfConfig":"31"},{"size":4715,"mtime":1626346108614,"results":"32","hashOfConfig":"31"},{"size":7625,"mtime":1626346082697,"results":"33","hashOfConfig":"31"},{"size":4273,"mtime":1626347084902,"results":"34","hashOfConfig":"31"},{"size":3097,"mtime":1626347535147,"results":"35","hashOfConfig":"31"},{"size":673,"mtime":1617964863456,"results":"36","hashOfConfig":"31"},{"size":419,"mtime":1626260359358,"results":"37","hashOfConfig":"31"},{"size":1787,"mtime":1619071910887,"results":"38","hashOfConfig":"31"},{"size":351,"mtime":1617964863446,"results":"39","hashOfConfig":"31"},{"size":724,"mtime":1626237679015,"results":"40","hashOfConfig":"31"},{"size":1564,"mtime":1626239122181,"results":"41","hashOfConfig":"31"},{"size":1110,"mtime":1626178799502,"results":"42","hashOfConfig":"31"},{"size":190,"mtime":1617964863452,"results":"43","hashOfConfig":"31"},{"size":4492,"mtime":1626345235128,"results":"44","hashOfConfig":"31"},{"size":1488,"mtime":1620279439613,"results":"45","hashOfConfig":"31"},{"size":3762,"mtime":1626345235123,"results":"46","hashOfConfig":"31"},{"size":1157,"mtime":1626345235125,"results":"47","hashOfConfig":"31"},{"size":1969,"mtime":1626345235110,"results":"48","hashOfConfig":"31"},{"size":4400,"mtime":1626345235107,"results":"49","hashOfConfig":"31"},{"size":312,"mtime":1625744342098,"results":"50","hashOfConfig":"31"},{"size":1449,"mtime":1625813680100,"results":"51","hashOfConfig":"31"},{"size":2261,"mtime":1626156367500,"results":"52","hashOfConfig":"31"},{"size":440,"mtime":1617964863457,"results":"53","hashOfConfig":"31"},{"size":379,"mtime":1617964863444,"results":"54","hashOfConfig":"31"},{"size":954,"mtime":1626237176136,"results":"55","hashOfConfig":"31"},{"size":3164,"mtime":1626345235126,"results":"56","hashOfConfig":"31"},{"size":2188,"mtime":1626345235116,"results":"57","hashOfConfig":"31"},{"size":5772,"mtime":1626265809562,"results":"58","hashOfConfig":"31"},{"size":1058,"mtime":1625812842971,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dx5cs1",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"64"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"82"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"82"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\MainHeader\\MainHeader.tsx",[],"C:\\GitHub\\miraculum\\src\\SharedComponents\\MobileMenu\\MobileMenu.tsx",[],["124","125"],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\MainLayout.tsx",["126"],"import React, { useState } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect, Route, Switch } from 'react-router-dom'\r\nimport { RootState } from '../../Redux'\r\nimport MainBody from './MainBody/MainBody'\r\nimport MainFooter from './MainFooter/MainFooter'\r\nimport MainHeader from './MainHeader/MainHeader'\r\nimport './MainLayout.scss'\r\nimport Main from './Pages/Main/Main'\r\nimport Second from './Pages/Second/Second'\r\nimport { setModalForm, setModalThanks } from '../../Redux/actions/modal'\r\nimport { ModalState } from '../../Redux/interfaces/interfaces'\r\nimport ModalWindow from '../../SharedComponents/ModalWindow/ModalWindow'\r\nimport IconButton from '../../SharedComponents/IconButton/IconButton'\r\nimport { Config } from '../../Config/Config'\r\nimport ReactInputMask from 'react-input-mask'\r\nimport axios from 'axios'\r\nimport LoaderHorizontal from '../../SharedComponents/LoaderHorizontal/LoaderHorizontal'\r\n\r\ninterface MainLayoutProps {\r\n  modal: ModalState\r\n  setModalForm: (isActive: boolean) => void\r\n  setModalThanks: (isActive: boolean) => void\r\n}\r\n\r\nconst MainLayout = (props: MainLayoutProps) => {\r\n  const [nameField, setNameField] = useState<string>('')\r\n  const [nameError, setNameError] = useState<boolean>(false)\r\n  const [phoneField, setPhoneField] = useState<string>('')\r\n  const [phoneError, setPhoneError] = useState<boolean>(false)\r\n  const [loading, setLoading] = useState<boolean>(false)\r\n\r\n  const nameChangeHandler = (value: string) => {\r\n    setNameField(value)\r\n    setNameError(false)\r\n  }\r\n\r\n  const phoneChangeHandler = (value: string) => {\r\n    setPhoneField(value)\r\n    setPhoneError(false)\r\n  }\r\n\r\n  const phoneValidate = (value: string): boolean => {\r\n    const str = value.match(/\\d/g)?.join('')\r\n    return str && str.length === Config.phoneMinLength ? true : false\r\n  }\r\n\r\n  const nameValidate = (value: string): boolean => {\r\n    const str = value\r\n      .trim()\r\n      .match(/^[а-яА-ЯёЁ]+$/g)\r\n      ?.join('')\r\n    return str && str.length > Config.nameMinLength ? true : false\r\n  }\r\n\r\n  const clickHandler = (): void => {\r\n    !phoneValidate(phoneField) && setPhoneError(true)\r\n    !nameValidate(nameField) && setNameError(true)\r\n    phoneValidate(phoneField) && nameValidate(nameField) && sendMail()\r\n  }\r\n\r\n  const sendMail = async (): Promise<any> => {\r\n    setLoading(true)\r\n    const mailSettings = { ...Config.mailSettings, userName: nameField, userPhone: phoneField, siteUrl: Config.url }\r\n    axios\r\n      .post(mailSettings.apiPath, mailSettings)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          console.log(res.data)\r\n          props.setModalForm(false)\r\n          props.setModalThanks(true)\r\n        } else {\r\n          console.log('Ошибка отправки сообщения')\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n      .finally(() => setLoading(false))\r\n\r\n    // props.setModalForm(false)\r\n    // props.setModalThanks(true)\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"MainLayout p-0\">\r\n      {props.modal.modalForm.isActive && (\r\n        <Container fluid className=\"KisModalForm p-0\">\r\n          <ModalWindow closeHandler={() => props.setModalForm(false)}>\r\n            <Container fluid className=\"KisModalForm__content p-0\">\r\n              <h1>Оставьте заявку</h1>\r\n              <h6>Мы свяжемся с вами и ответим на все ваши вопросы</h6>\r\n              <div className=\"KisModalForm__formFieldCont\">\r\n                <input\r\n                  className=\"KisModalForm__input\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"Ваше имя\"\r\n                  value={nameField}\r\n                  onChange={(event) => nameChangeHandler(event?.target.value)}\r\n                />\r\n                <div className=\"KisModalForm__imgCont\">\r\n                  <img src=\"/icons/men.svg\" alt=\"\" />\r\n                </div>\r\n                {nameError && <small className=\"KisModalForm__inputError\">Не корректное заполнение поля</small>}\r\n              </div>\r\n              <div className=\"KisModalForm__formFieldCont\">\r\n                <ReactInputMask\r\n                  mask=\"9 (999) 999-99-99\"\r\n                  className={`KisModalForm__input `}\r\n                  type=\"tel\"\r\n                  name=\"phone\"\r\n                  placeholder=\"8 (900) 888-88-88\"\r\n                  value={phoneField}\r\n                  onChange={(event) => phoneChangeHandler(event?.target.value)}\r\n                />\r\n                <div className=\"KisModalForm__imgCont\">\r\n                  <img src=\"/icons/phone.svg\" alt=\"\" />\r\n                </div>\r\n                {phoneError && <small className=\"KisModalForm__inputError\">Не корректное заполнение поля</small>}\r\n              </div>\r\n\r\n              {loading ? (\r\n                <LoaderHorizontal />\r\n              ) : (\r\n                <div className=\"KisModalForm__formFieldCont\">\r\n                  <IconButton\r\n                    bgColor=\"#6473FB\"\r\n                    borderRadius=\"3px\"\r\n                    title=\"Отправить заявку\"\r\n                    height={70}\r\n                    width={280}\r\n                    onClickHandler={() => clickHandler()}\r\n                  />\r\n                </div>\r\n              )}\r\n\r\n              <p>\r\n                Нажимая кнопку “Отправить” даю свое согласие на обработку{' '}\r\n                <a href={`${Config.url}/politic.pdf`} target=\"_blank\">\r\n                  персональных данных\r\n                </a>\r\n              </p>\r\n            </Container>\r\n          </ModalWindow>\r\n        </Container>\r\n      )}\r\n\r\n      {props.modal.modalThanks.isActive && (\r\n        <Container fluid className=\"KisModalThanks p-0\">\r\n          <ModalWindow closeHandler={() => props.setModalThanks(false)}>\r\n            <Container fluid className=\"KisModalThanks__content p-0\">\r\n              <h1 className=\"text-center\" style={{ padding: 30, paddingTop: 0 }}>\r\n                Спасибо за заявку!\r\n              </h1>\r\n              <p className=\"text-center\" style={{ padding: 30, paddingTop: 0 }}>\r\n                В ближайшее время мы свяжемся с вами\r\n              </p>\r\n              <div className=\"KisModalThanks__button d-flex justify-content-center\">\r\n                <IconButton\r\n                  bgColor=\"#6473FB\"\r\n                  borderRadius=\"3px\"\r\n                  title=\"Вернуться на сайт\"\r\n                  height={70}\r\n                  width={280}\r\n                  onClickHandler={() => {\r\n                    props.setModalThanks(false)\r\n                    document.querySelector('body')?.classList.remove('modal-open')\r\n                  }}\r\n                />\r\n              </div>\r\n            </Container>\r\n          </ModalWindow>\r\n        </Container>\r\n      )}\r\n\r\n      <MainHeader />\r\n      <MainBody>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Main} />\r\n          <Route path=\"/second\" exact component={Second} />\r\n\r\n          <Redirect to=\"/\" />\r\n        </Switch>\r\n      </MainBody>\r\n\r\n      <MainFooter />\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setModalForm,\r\n  setModalThanks,\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  const modal = state.modal\r\n  return {\r\n    modal,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout)\r\n","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block3\\Block3.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\MainFooter\\MainFooter.tsx",[],"C:\\GitHub\\miraculum\\src\\index.tsx",[],"C:\\GitHub\\miraculum\\src\\Redux\\index.tsx",["127"],"C:\\GitHub\\miraculum\\src\\SharedComponents\\ToastComponent\\ToastComponent.tsx",[],"C:\\GitHub\\miraculum\\src\\Redux\\actions\\toast.tsx",[],"C:\\GitHub\\miraculum\\src\\Redux\\actions\\modal.tsx",[],["128","129"],"C:\\GitHub\\miraculum\\src\\SharedComponents\\IconButton\\IconButton.tsx",["130","131","132"],"import React from 'react'\r\nimport { useState } from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport { propTypes } from 'react-bootstrap/esm/Image'\r\nimport './IconButton.scss'\r\n\r\ninterface IconButtonProps {\r\n  height: number\r\n  width?: number\r\n  icon?: string\r\n  title: string\r\n  borderRadius?: string\r\n  boxShadow?: string\r\n  bgColor: string\r\n  bgIconColor?: string\r\n  onClickHandler?: () => void\r\n}\r\n\r\nexport default function IconButton(props: IconButtonProps) {\r\n  return (\r\n    <div\r\n      className={`IconButton p-0 d-flex justify-content-start hvr-sweep-to-right`}\r\n      style={{\r\n        width: props.width ? props.width : '100%',\r\n        boxShadow: props.boxShadow ? props.boxShadow : 'none',\r\n        borderRadius: props.borderRadius ? props.borderRadius : '0px',\r\n        backgroundColor: props.bgColor,\r\n        height: props.height,\r\n      }}\r\n      onClick={() => props.onClickHandler && props.onClickHandler()}\r\n    >\r\n      {props.icon && (\r\n        <div\r\n          className=\"IconButton__icon d-flex justify-content-center align-items-center\"\r\n          style={{\r\n            width: props.height*1.2,\r\n            height: props.height,\r\n            backgroundColor: props.bgIconColor ? props.bgIconColor : props.bgColor,\r\n          }}\r\n        >\r\n          <img className=\"img-fluid\" src={`${props.icon}`} alt={`${props.title}`} />\r\n        </div>\r\n      )}\r\n      <div className=\"IconButton__title d-flex justify-content-center align-items-center\" style={{ width: '100%' }}>\r\n        {props.title}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Main.tsx",[],"C:\\GitHub\\miraculum\\src\\Redux\\reducers\\index.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block9\\Block9.tsx",["133"],"C:\\GitHub\\miraculum\\src\\Redux\\reducers\\app.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block5\\Block5.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block7\\Block7.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block11\\Block11.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block1\\Block1.tsx",["134"],"import React from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport { connect } from 'react-redux'\r\nimport { RootState } from '../../../../../Redux'\r\nimport CircleDot from '../../../../../SharedComponents/CircleDot/CircleDot'\r\nimport IconButton from '../../../../../SharedComponents/IconButton/IconButton'\r\nimport './Block1.scss'\r\nimport { setModalForm } from '../../../../../Redux/actions/modal'\r\nimport { ModalState } from '../../../../../Redux/interfaces/interfaces'\r\nimport { Element } from 'react-scroll'\r\nimport ScrollAnimation from 'react-animate-on-scroll'\r\n\r\ninterface Block1 {\r\n  modal: ModalState\r\n  setModalForm: (isActive: boolean) => void\r\n}\r\n\r\nconst Block1 = (props: Block1) => {\r\n  return (\r\n    <Element name=\"Block1\">\r\n      <Container\r\n        fluid\r\n        className=\"Block1\"\r\n        style={{\r\n          backgroundImage: `url(\"/img/bg.png\")`,\r\n        }}\r\n      >\r\n        <Container className=\"Block1__Content\">\r\n          <Row className=\"Block1__Row1 m-0\">\r\n            <Col md={6} xs={12} className=\"Block1__Left\">\r\n              <ScrollAnimation animateOnce={true} offset={0} animateIn=\"animate__fadeInLeft\">\r\n                <div className=\"Block1__blurCard d-flex align-items-center\">\r\n                  <div>\r\n                    <h1>Маркетинговые иследования</h1>\r\n                    <p>Проводим исследования предпочтений потребителей и развития продукта</p>\r\n                    <IconButton\r\n                      bgColor=\"#6473FB\"\r\n                      borderRadius=\"3px\"\r\n                      title=\"Подобрать услугу\"\r\n                      height={80}\r\n                      icon=\"/icons/level.svg\"\r\n                      bgIconColor=\"#5B68DF\"\r\n                      width={300}\r\n                      onClickHandler={() => props.setModalForm(true)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </ScrollAnimation>\r\n            </Col>\r\n            <Col md={6} className=\"Block1__circleDots\">\r\n              <div className=\"Block1__circleDot1\">\r\n                <ScrollAnimation animateOnce={true} offset={0} delay={1000} animateIn=\"animate__fadeIn\">\r\n                  <CircleDot bgCircles=\"#ffffff\" bgCirclesHover=\"#6473FB\" diam={50}>\r\n                    <div id=\"Miraclum__dotMessage\">\r\n                      <div className=\"Miraclum__dotMessageTitle\">12+ лет</div>\r\n                      <div className=\"Miraclum__dotMessageContent\">в исследованиях</div>\r\n                    </div>\r\n                  </CircleDot>\r\n                </ScrollAnimation>\r\n              </div>\r\n              <div className=\"Block1__circleDot2\">\r\n                <ScrollAnimation animateOnce={true} offset={0} delay={1400} animateIn=\"animate__fadeIn\">\r\n                  <CircleDot bgCircles=\"#ffffff\" bgCirclesHover=\"#6473FB\" diam={50}>\r\n                    <div id=\"Miraclum__dotMessage\">\r\n                      <div className=\"Miraclum__dotMessageTitle\">30 операторов</div>\r\n                      <div className=\"Miraclum__dotMessageContent\">в собственном CALL-центре</div>\r\n                    </div>\r\n                  </CircleDot>\r\n                </ScrollAnimation>\r\n              </div>\r\n              <div className=\"Block1__circleDot3\">\r\n                <ScrollAnimation animateOnce={true} offset={0} delay={1200} animateIn=\"animate__fadeIn\">\r\n                  <CircleDot bgCircles=\"#ffffff\" bgCirclesHover=\"#6473FB\" diam={50}>\r\n                    <div id=\"Miraclum__dotMessage\">\r\n                      <div className=\"Miraclum__dotMessageTitle\">75+ регионов России</div>\r\n                      <div className=\"Miraclum__dotMessageContent\">\r\n                        для проведения исследований и поиска респондентов\r\n                      </div>\r\n                    </div>\r\n                  </CircleDot>\r\n                </ScrollAnimation>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </Container>\r\n    </Element>\r\n  )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  setModalForm,\r\n}\r\n\r\nfunction mapStateToProps(state: RootState) {\r\n  const modal = state.modal\r\n  return {\r\n    modal,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Block1)\r\n","C:\\GitHub\\miraculum\\src\\SharedComponents\\HorLine\\HorLine.tsx",[],"C:\\GitHub\\miraculum\\src\\SharedComponents\\CircleDot\\CircleDot.tsx",[],"C:\\GitHub\\miraculum\\src\\SharedComponents\\TaskDropDownCard\\TaskDropDownCard.tsx",["135","136"],"import React, { useState } from 'react'\r\nimport { Col, Container, Row } from 'react-bootstrap'\r\nimport OutsideClickHandler from 'react-outside-click-handler'\r\nimport TaskInterface from '../../Redux/interfaces/AdditionalInterfaces/TaskInterface'\r\nimport './TaskDropDownCard.scss'\r\n\r\ninterface TaskDropDownCardProps {\r\n  icon?: string\r\n  taskList: string[]\r\n}\r\n\r\nexport default function TaskDropDownCard(props: TaskDropDownCardProps) {\r\n  const [dropDown, setDropDown] = useState<boolean>(false)\r\n\r\n  return (\r\n    <OutsideClickHandler onOutsideClick={() => setDropDown(false)}>\r\n      <Container fluid className=\"p-0\">\r\n        <Row className=\"m-0\">\r\n          <Col xl={5} lg={6} md={12} className=\"p-0\">\r\n            <Container fluid className=\"TaskDropDownCard\" onClick={() => setDropDown(!dropDown)}>\r\n              <Row className=\"TaskDropDownCard__Row m-0 justify-content-between align-items-center\">\r\n                <Col xs={10} className=\"TaskDropDownCard__name  p-0 d-flex  justify-content-start align-items-center\">\r\n                  <div className=\"TaskDropDownCard__nameImg d-flex align-items-center\">\r\n                    <img src={`/icons/taskList.svg`} />\r\n                  </div>\r\n                  <div className=\"TaskDropDownCard__nameTitle\">Задачи</div>\r\n                </Col>\r\n                <Col xs={2} className=\"TaskDropDownCard__ddImg p-0 d-flex justify-content-end align-items-center\">\r\n                  <img src=\"/icons/arrowDownYellow.svg\" alt=\"\" />\r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Col>\r\n          <Col xs={12} className=\"p-0\">\r\n            {dropDown && (\r\n              <Container fluid className=\"TaskDropDownCard__dd animate animate__fadeInUp\">\r\n                <Row className=\"TaskDropDownCard__taskList\">\r\n                  {props.taskList.map((taskItem, index) => {\r\n                    return (\r\n                      <Col lg={4} md={6} sm={12} key={index} className=\"TaskDropDownCard__task\">\r\n                        {taskItem}\r\n                      </Col>\r\n                    )\r\n                  })}\r\n                </Row>\r\n              </Container>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </OutsideClickHandler>\r\n  )\r\n}\r\n","C:\\GitHub\\miraculum\\src\\reportWebVitals.ts",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Second\\Second.tsx",[],"C:\\GitHub\\miraculum\\src\\Redux\\constants\\ActionTypes.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block8\\Block8.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block2\\Block2.tsx",[],"C:\\GitHub\\miraculum\\src\\Layouts\\MainLayout\\Pages\\Main\\Block6\\Block6.tsx",["137","138","139","140","141"],"C:\\GitHub\\miraculum\\src\\SharedComponents\\AreaCard\\AreaCard.tsx",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":141,"column":55,"nodeType":"148","endLine":141,"endColumn":70},{"ruleId":"149","severity":1,"message":"150","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":29},{"ruleId":"142","replacedBy":"153"},{"ruleId":"144","replacedBy":"154"},{"ruleId":"149","severity":1,"message":"155","line":2,"column":10,"nodeType":"151","messageId":"152","endLine":2,"endColumn":18},{"ruleId":"149","severity":1,"message":"156","line":3,"column":10,"nodeType":"151","messageId":"152","endLine":3,"endColumn":19},{"ruleId":"149","severity":1,"message":"157","line":4,"column":10,"nodeType":"151","messageId":"152","endLine":4,"endColumn":19},{"ruleId":"158","severity":1,"message":"159","line":80,"column":63,"nodeType":"160","messageId":"161","endLine":80,"endColumn":65},{"ruleId":"162","severity":1,"message":"163","line":18,"column":7,"nodeType":"151","messageId":"164","endLine":18,"endColumn":13},{"ruleId":"149","severity":1,"message":"165","line":4,"column":8,"nodeType":"151","messageId":"152","endLine":4,"endColumn":21},{"ruleId":"166","severity":1,"message":"167","line":24,"column":21,"nodeType":"168","endLine":24,"endColumn":56},{"ruleId":"149","severity":1,"message":"169","line":13,"column":8,"nodeType":"151","messageId":"152","endLine":13,"endColumn":18},{"ruleId":"149","severity":1,"message":"170","line":13,"column":22,"nodeType":"151","messageId":"152","endLine":13,"endColumn":30},{"ruleId":"149","severity":1,"message":"171","line":13,"column":32,"nodeType":"151","messageId":"152","endLine":13,"endColumn":42},{"ruleId":"149","severity":1,"message":"172","line":29,"column":19,"nodeType":"151","messageId":"152","endLine":29,"endColumn":29},{"ruleId":"158","severity":1,"message":"159","line":104,"column":53,"nodeType":"160","messageId":"161","endLine":104,"endColumn":55},"no-native-reassign",["173"],"no-negated-in-lhs",["174"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","@typescript-eslint/no-unused-vars","'composeWithDevTools' is defined but never used.","Identifier","unusedVar",["173"],["174"],"'useState' is defined but never used.","'Container' is defined but never used.","'propTypes' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","@typescript-eslint/no-redeclare","'Block1' is already defined.","redeclared","'TaskInterface' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'SwiperCore' is defined but never used.","'Autoplay' is defined but never used.","'Navigation' is defined but never used.","'setLetters' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]